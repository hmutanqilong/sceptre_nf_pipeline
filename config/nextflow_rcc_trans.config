nextflow.enable.dsl=2

profiles{
    
    local {
        // ---- local laptop profile ----
    }
    
    hpc {

        // executor setting
        executor {
            name = 'slurm'
            queueSize = 1000
            submitRateLimit = '5 sec'
            }

        
        // basic process options
        process {
            
            // Slurm options
            executor = 'slurm'
            
            // queue = 'xuanyao-hm'
            clusterOptions = '--account pi-xuanyao'
            
            // resourses
            cpus = 1
            memory = '20 GB'
            // errorStrategy = 'retry'
            // maxRetries = 2
            
            // run script in login shell
            shell=['/bin/bash','-l']
            
            // some beforeScript settings
            beforeScript = 
            '''
            module load --force R/4.4.1+oneapi-2024.2.0

            chmod u+x .command.sh

            echo "------ R path and version -------"
            which Rscript
            Rscript --version
            R -q -e 'sessionInfo()'

            # export OMP_NUM_THREADS=1
            # export OPENBLAS_NUM_THREADS=1
            '''

            /* -------- some specfic options in process ---------*/
            // 1. set parameters
            withName:set_analysis_parameters{
                // queue = 'caslake'
                cpus = 1
                memory = '30 GB'
                clusterOptions = '-p xuanyao-hm --qos xuanyao'
                }            
            // 2. prepare assign grnas
            withName:prepare_assign_grnas {
                queue = 'caslake'
                cpus = 1
                memory = '20 GB'
                }
            // 3. assign grnas
            withName:assign_grnas {
                queue = 'caslake'
                cpus = 1
                memory = '30 GB'
                }

            withName:combine_assign_grnas {
                queue = 'caslake'
                cpus = 1
                memory = '60 GB'
                }
            // 4. run qc
            withName:run_qc {
                queue = 'caslake'
                cpus = 1
                memory = '20 GB'
                }

            // 5. prepare association
            withName:prepare_association_analysis {
                queue = 'caslake'
                cpus = 1
                memory = '16 GB'
                }
            // 6. run_association_analysis
            withName:'run_analysis_subworkflow_calibration_check:run_association_analysis' {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = { task.attempt > 1 ? '40.GB' : '20.GB' }
                }
            withName:'run_analysis_subworkflow_calibration_check:combine_association_analysis' {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '60.GB' : '50.GB'}
                }
            withName:'run_analysis_subworkflow_power_check:run_association_analysis' {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '30.GB' : '20.GB'}
                }
            withName:'run_analysis_subworkflow_power_check:combine_association_analysis' {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '60.GB' : '50.GB'}
                }
            withName:'run_analysis_subworkflow_discovery_analysis:run_association_analysis' {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '30.GB' : '20.GB'}
                }
            withName:'run_analysis_subworkflow_discovery_analysis:combine_association_analysis' {
                cpus = 1
                queue = 'caslake'
                memory = '50.GB'
                }
            // 7. trans association analysis
            withName:run_qc_trans {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '40.GB' : '20.GB'}
                }
            withName:prepare_association_analysis_trans {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '40.GB' : '20.GB'}
                }
            withName:run_discovery_analysis_trans {
                errorStrategy = 'retry'
                maxRetries = 2
                cpus = 1
                queue = 'caslake'
                memory = {task.attempt > 1 ? '30.GB' : '5.GB'} // original 50 30
                time = '35h'
                }
                           
        }
    }
        
    
}
